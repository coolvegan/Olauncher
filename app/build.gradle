plugins {
    id("com.android.application")
    id("org.jetbrains.kotlin.android")
    id("org.jetbrains.kotlin.plugin.serialization")
}

android {
    compileSdk 35

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_11.toString()
    }

    defaultConfig {
        applicationId "app.olauncher"
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 59
        versionName "v4.0.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //Read API Key for WeatherAPI in local.properties
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        buildConfigField "String", "API_KEY", "\"${properties.getProperty('API_KEY')}\""
        buildConfigField "String", "MARCO_API_KEY", "\"${properties.getProperty('MARCO_API_KEY')}\""
        buildConfigField "String", "API_USERNAME", "\"${properties.getProperty('API_USERNAME')}\""
        buildConfigField "String", "API_PASSWORD", "\"${properties.getProperty('API_PASSWORD')}\""
        buildConfigField "int", "WEATHER_UPDATE_INTERVAL_IN_MINUTES", "${properties.getProperty('WEATHER_UPDATE_INTERVAL_IN_MINUTES')}"
    }

    buildTypes {
        release {
            debuggable false
            //this must be off, otherwise the json will be wrong
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
        compose = true
        buildConfig = true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.10"  // Use a version compatible with your Kotlin version
    }

    namespace 'app.olauncher'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation "androidx.recyclerview:recyclerview:1.3.2"
    implementation("androidx.activity:activity-ktx:1.8.2")
    implementation("androidx.activity:activity-compose:1.8.2")

    // Compose BOM
    implementation platform("androidx.compose:compose-bom:2024.03.00")

    // Compose dependencies
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.ui:ui-tooling-preview"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.runtime:runtime"

    // Compose debug tools
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"

    // JSON Decoder
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.0")

    // Android lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.7.6"

    // Work Manager
    implementation "androidx.work:work-runtime-ktx:2.9.0"

    // Location Services
    implementation 'com.google.android.gms:play-services-location:21.0.1'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'

    // Deserialize Json / DataClass
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.14.3"
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.2.1'
    implementation 'com.google.android.material:material:1.10.0'
}